{"version":3,"sources":["context/game/GameContext.js","context/types.js","context/game/GameReducer.js","config/constants.js","helper/ChessClient.js","context/game/GameState.js","context/humanGame/HumanGameContext.js","context/humanGame/HumanGameReducer.js","context/humanGame/HumanGameState.js","context/P2P/P2PContext.js","context/P2P/P2PReducer.js","hooks/types.js","context/P2P/P2PState.js","context/settings/SettingsContext.js","context/settings/SettingsReducer.js","context/settings/SettingsState.js","context/counter/CounterContext.js","context/counter/CounterReducer.js","context/counter/CounterState.js","components/common/Navbar/Navbar.js","components/common/Footer/Footer.js","pages/Home/Home.js","components/PlayAgainstHuman/Views/HostOrJoin.js","hooks/useP2Pt.js","components/common/ToggleSwitch/ToggleSwitch.js","components/common/Settings/GeneralSettings.js","components/PlayAgainstHuman/Views/Lobby.js","helper/FormatMove.js","components/PlayAgainstHuman/GameTabs/Play/GameStatus/GameStatus.js","components/common/MoveButtons/MoveButtons.js","components/PlayAgainstHuman/GameTabs/Play/Play.js","components/common/GameTabs/MoveTable/MoveTable.js","components/common/GameTabs/Board/Board.js","components/PlayAgainstHuman/Views/Game.js","pages/PlayAgainstHuman/PlayAgainstFriend.js","pages/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","SET_CHESS_CLIENT","SET_START_GAME","SET_MOVES_PGN","SET_MOVES_FEN","SET_MY_TURN","SET_GAME_STATUS","RESET_GAME_STATE","SET_HOST","SET_GAME_CODE","SET_OPP_USERNAME","SET_OPP_START_GAME","SET_RECEIVED_SETTINGS","SET_HUMAN_GAME_STATUS","SET_OFFER_REMATCH","SET_OFFER_DRAW","SET_REQUEST_TAKEBACK","RESET_HUMAN_GAME_STATE","SET_P2PT","SET_OPP_PEER_OBJ","SET_ALL_SETTINGS","SET_COLOUR","SET_USERNAME","SET_ENTER_BY_KEYBOARD","SET_SHOW","SET_TIMES_TO_SHOW","SET_ALLOW","SET_TIMES_ALLOWED","SET_ALL_COUNTERS","SET_COUNTER","DECREMENT_COUNTER","GameReducer","state","action","payload","type","chessClient","startGame","movesPgn","movesFen","myTurn","gameStatus","STARTING_FEN","GAME_ANNOUNCE_URLS","window","location","hostname","MAX_TIMES","newChessClient","fen","Chess","starting","main","reason","active","whiteWon","blackWon","drawByStalemate","drawByRepetition","drawByInsufficientMaterial","drawBy50MoveRule","ChessClient","reset","client","move","mv","sloppy","isValidMove","getLegalMoves","moves","getMoveHistory","history","undoMove","undo","getPgn","pgn","getFen","gameHistory","loadPosition","load","getStatus","length","in_checkmate","turn","in_stalemate","in_threefold_repetition","insufficient_material","in_draw","this","newGameState","GameState","props","initialState","useReducer","dispatch","Provider","value","setChessClient","setStartGame","setMovesPgn","setMovesFen","setMyTurn","setGameStatus","resetGameState","children","HumanGameContext","HumanGameReducer","oppUsername","oppStartGame","receivedSettings","isHost","gameCode","offerDraw","offerRematch","requestTakeback","newHumanGameState","winner","rematchOffered","drawOffered","takebackRequested","HumanGameState","setHost","setGameCode","setOppUsername","username","setOppStartGame","setReceivedSettings","setOfferRematch","setOfferDraw","setRequestTakeback","resetHumanGameState","P2PContext","P2PReducer","p2pt","oppPeerObj","MSG_TYPES","SIGNAL_TYPES","newP2PState","P2PState","setP2pt","setOppPeerObj","sendSignal","signalMsg","msg","send","JSON","stringify","sendUsername","sendSettings","settings","modSettings","sendMove","sendChessClient","newClient","sendGameStatus","SettingsContext","SettingsReducer","curSettingValue","settingName","settingValue","show","timesToShow","allow","timesAllowed","colour","enterByKeyboard","SettingsState","legalMoves","movesTable","board","mate","checks","captures","illegalMove","takeBack","illegalMoveLoss","setSettings","setAllSettings","setColour","setUsername","setEnterByKeyboard","setShow","setTimesToShow","times","setAllow","setTimesAllowed","CounterContext","CounterReducer","counterName","counterValue","curCounterValue","CounterState","Infinity","illegalMoves","takebacks","setAllCounters","allCounters","setCounter","decrementCounter","Navbar","className","to","icon","faBrain","color","faInfo","faQuestion","Footer","href","target","rel","Home","faUserFriends","HostOrJoin","setView","useState","inputCode","setInputCode","inputUsername","setInputUsername","humanContext","useContext","id","placeholder","onChange","e","onClick","code","Math","random","toString","substr","console","log","P2PT","require","useP2Pt","p2pContext","gameContext","humanGameContext","settingsContext","useEffect","p2ptObj","on","tracker","stats","announceUrl","peer","parse","start","connect","ToggleSwitch","name","currentValue","defaultChecked","disabled","small","text","checked","htmlFor","data-yes","data-no","defaultProps","GeneralSettings","numOfTimes","defaultValue","Number","map","val","idx","Lobby","myUsername","formatMove","showIfMate","showIfCheck","showIfCapture","formattedMove","replace","GameStatus","getLastMove","offsetTrue","offsetFalse","offset","lastOppMove","lastMyMove","myText","oppText","MoveButtons","setInputMove","Play","playerColour","counterContext","inputMove","showLegalMoves","setShowLegalMoves","gameIsOver","handleOfferRematchResponse","newStatus","handleOfferDrawResponse","handleTakebackResponse","counter","split","handleGameStatus","handleIllegalMove","faPercentage","takeback","faArrowLeft","faHandshake","faUndo","MoveTable","rowMapper","row","moveNumber","key","white","black","movetext","ms","ravRegex","test","trim","rows","rowRegex","result","exec","parseInt","push","defaultGetRows","getMoves","Board","screenWidth","screen","width","position","draggable","Game","gameTab","setGameTab","boardCounter","movesTableCounter","faPlay","faClipboard","faChessBoard","PlayAgainstFriend","view","NotFound","App","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b494c3b.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst GameContext = createContext();\n\nexport default GameContext;","// GameState\nexport const SET_CHESS_CLIENT = \"SET_CHESS_CLIENT\";\nexport const SET_START_GAME = \"SET_START_GAME\";\nexport const SET_MOVES_PGN = \"SET_MOVES_PGN\";\nexport const SET_MOVES_FEN = \"SET_MOVES_FEN\";\nexport const SET_MY_TURN = \"SET_MY_TURN\";\nexport const SET_GAME_STATUS = \"SET_GAME_STATUS\";\nexport const RESET_GAME_STATE = \"RESET_GAME_STATE\";\n\n// HumanGameState\nexport const SET_HOST = \"SET_HOST\";\nexport const SET_GAME_CODE = \"SET_GAME_CODE\";\nexport const SET_OPP_USERNAME = \"SET_OPP_USERNAME\";\nexport const SET_OPP_START_GAME = \"SET_OPP_START_GAME\";\nexport const SET_RECEIVED_SETTINGS = \"SET_RECEIVED_SETTINGS\";\nexport const SET_HUMAN_GAME_STATUS = \"SET_HUMAN_GAME_STATUS\";\nexport const SET_OFFER_REMATCH = \"SET_OFFER_REMATCH\";\nexport const SET_OFFER_DRAW = \"SET_OFFER_DRAW\";\nexport const SET_REQUEST_TAKEBACK = \"SET_REQUEST_TAKEBACK\";\nexport const RESET_HUMAN_GAME_STATE = \"RESET_HUMAN_GAME_STATE\";\n\n// P2PState\nexport const SET_P2PT = \"SET_P2PT\";\nexport const SET_OPP_PEER_OBJ = \"SET_OPP_PEER_OBJ\";\n\n// Settings\nexport const SET_ALL_SETTINGS = \"SET_ALL_SETTINGS\";\nexport const SET_COLOUR = \"SET_COLOUR\";\nexport const SET_USERNAME = \"SET_USERNAME\";\nexport const SET_ENTER_BY_KEYBOARD = \"SET_ENTER_BY_KEYBOARD\";\nexport const SET_SHOW = \"SET_SHOW\";\nexport const SET_TIMES_TO_SHOW = \"SET_TIMES_TO_SHOW\";\nexport const SET_ALLOW = \"SET_ALLOW\";\nexport const SET_TIMES_ALLOWED = \"SET_TIMES_ALLOWED\";\n\n// Counter\nexport const SET_ALL_COUNTERS = \"SET_ALL_COUNTERS\";\nexport const SET_COUNTER = \"SET_COUNTER\";\nexport const DECREMENT_COUNTER = \"DECREMENT_COUNTER\";","import {\n  SET_CHESS_CLIENT,\n  SET_START_GAME,\n  SET_MOVES_PGN,\n  SET_MOVES_FEN,\n  SET_MY_TURN,\n  SET_GAME_STATUS,\n  RESET_GAME_STATE,\n} from \"../types\";\n\nconst GameReducer = (state, action) => {\n  const payload = action.payload;\n\n  switch (action.type) {\n    case SET_CHESS_CLIENT:\n      return { ...state, chessClient: payload };\n\n    case SET_START_GAME:\n      return { ...state, startGame: payload };\n\n    case SET_MOVES_PGN:\n      return { ...state, movesPgn: payload };\n\n    case SET_MOVES_FEN:\n      return { ...state, movesFen: payload };\n\n    case SET_MY_TURN:\n      return { ...state, myTurn: payload };\n\n    case SET_GAME_STATUS:\n      return { ...state, gameStatus: payload };\n\n    case RESET_GAME_STATE:\n      return { ...state, ...payload };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default GameReducer;\n","export const GAME_CODE_LENGTH = 4;\nexport const STARTING_FEN =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\nexport const MAX_NOTATION_LENGTH = 7;\n\nexport let GAME_ANNOUNCE_URLS = [\n  \"wss://tracker.openwebtorrent.com\",\n  \"wss://tracker.sloppyta.co:443/announce\",\n  \"wss://tracker.novage.com.ua:443/announce\",\n  \"wss://tracker.btorrent.xyz:443/announce\",\n];\nif (window.location.hostname === \"localhost\") {\n  GAME_ANNOUNCE_URLS = [\"ws://localhost:5000\"];\n}\n\nexport const APP_NAME = \"Blindfold Chess\";\n\nexport const MAX_TIMES = 10000;","import Chess from \"chess.js\";\n\nimport { STARTING_FEN } from \"../config/constants\";\n\nexport const newChessClient = (fen = STARTING_FEN) => new Chess(fen);\n\nconst gameStatus = {\n  starting: {main: \"New Game\", reason: null},\n  active: {main: \"Active Game\", reason: null},\n  whiteWon: {main: \"White Won\", reason: \"Checkmate\"},\n  blackWon: {main: \"Black Won\", reason: \"Checkmate\"},\n  drawByStalemate: {main: \"Draw\", reason: \"Stalemate\"},\n  drawByRepetition: {main: \"Draw\", reason: \"Threefold Repetition\"},\n  drawByInsufficientMaterial: {main: \"Draw\", reason: \"Insufficient Material\"},\n  drawBy50MoveRule: {main: \"Draw\", reason: \"50 Move Rule\"},\n};\n\nexport class ChessClient {\n  constructor(fen = STARTING_FEN) {\n    this.client = newChessClient(fen);\n  }\n\n  reset = () => this.client.reset();\n\n  move = (mv) => this.client.move(mv, { sloppy: true });\n\n  isValidMove = (move) => {\n    const tempClient = newChessClient(this.client.fen());\n    const result = tempClient.move(move, { sloppy: true });\n\n    return result != null;\n  };\n\n  getLegalMoves = () => this.client.moves();\n\n  getMoveHistory = () => this.client.history();\n\n  undoMove = () => this.client.undo();\n\n  getPgn = () => this.client.pgn();\n  getFen = () => this.client.fen();\n\n  gameHistory = () => this.client.history();\n\n  loadPosition = (pgn) => this.client.load(pgn);\n\n  getStatus = () => {\n    const client = this.client;\n\n    if (client.history().length === 0) return gameStatus.starting;\n\n    if (client.in_checkmate())\n      return client.turn() === \"b\" ? gameStatus.whiteWon : gameStatus.blackWon;\n\n    if (client.in_stalemate()) return gameStatus.drawByStalemate;\n\n    if (client.in_threefold_repetition()) return gameStatus.drawByRepetition;\n\n    if (client.insufficient_material())\n      return gameStatus.drawByInsufficientMaterial;\n\n    if (client.in_draw()) return gameStatus.drawBy50MoveRule;\n\n    return gameStatus.active;\n  };\n}\n","import React, { useReducer } from \"react\";\n\nimport GameContext from \"./GameContext\";\nimport GameReducer from \"./GameReducer\";\n\nimport { ChessClient } from \"../../helper/ChessClient\";\nimport { STARTING_FEN } from \"../../config/constants\";\n\nimport {\n  SET_START_GAME,\n  SET_CHESS_CLIENT,\n  SET_MOVES_PGN,\n  SET_MOVES_FEN,\n  SET_GAME_STATUS,\n  SET_MY_TURN,\n  RESET_GAME_STATE,\n} from \"../types\";\n\nexport const newChessClient = () => new ChessClient(STARTING_FEN);\n\nexport const newGameState = {\n  chessClient: newChessClient(),\n  startGame: false,\n  movesPgn: null,\n  movesFen: STARTING_FEN,\n  myTurn: true,\n  gameStatus: \"New Game\",\n};\n\nconst GameState = (props) => {\n  const initialState = newGameState;\n\n  const [state, dispatch] = useReducer(GameReducer, initialState);\n\n  const setChessClient = (value) => {\n    dispatch({ type: SET_CHESS_CLIENT, payload: value });\n  };\n\n  const setStartGame = (value) => {\n    dispatch({ type: SET_START_GAME, payload: value });\n  };\n\n  const setMovesPgn = (movesPgn) => {\n    dispatch({ type: SET_MOVES_PGN, payload: movesPgn });\n  };\n\n  const setMovesFen = (movesFen) => {\n    dispatch({ type: SET_MOVES_FEN, payload: movesFen });\n  };\n\n  const setMyTurn = (myTurn) => {\n    dispatch({ type: SET_MY_TURN, payload: myTurn });\n  };\n\n  const setGameStatus = (gameStatus) => {\n    dispatch({ type: SET_GAME_STATUS, payload: gameStatus });\n  };\n\n  const resetGameState = () => {\n    dispatch({ type: RESET_GAME_STATE, payload: newGameState });\n  };\n\n  return (\n    <GameContext.Provider\n      value={{\n        chessClient: state.chessClient,\n        startGame: state.startGame,\n        movesPgn: state.movesPgn,\n        movesFen: state.movesFen,\n        myTurn: state.myTurn,\n        gameStatus: state.gameStatus,\n        setChessClient,\n        setStartGame,\n        setMovesPgn,\n        setMovesFen,\n        setMyTurn,\n        setGameStatus,\n        resetGameState,\n      }}\n    >\n      {props.children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameState;\n","import { createContext } from \"react\";\n\nconst HumanGameContext = createContext();\n\nexport default HumanGameContext;","import {\n  SET_OPP_USERNAME,\n  SET_OPP_START_GAME,\n  SET_RECEIVED_SETTINGS,\n  SET_HOST,\n  SET_GAME_CODE,\n  SET_HUMAN_GAME_STATUS,\n  SET_OFFER_DRAW, \n  SET_OFFER_REMATCH, \n  SET_REQUEST_TAKEBACK,\n  RESET_HUMAN_GAME_STATE,\n} from \"../types\";\n\nconst HumanGameReducer = (state, action) => {\n  const payload = action.payload;\n\n  switch (action.type) {\n    case SET_OPP_USERNAME:\n      return { ...state, oppUsername: payload };\n\n    case SET_OPP_START_GAME:\n      return { ...state, oppStartGame: payload };\n\n    case SET_RECEIVED_SETTINGS:\n      return { ...state, receivedSettings: payload };\n\n    case SET_HOST:\n      return { ...state, isHost: true };\n\n    case SET_GAME_CODE:\n      return { ...state, gameCode: payload };\n\n    case SET_HUMAN_GAME_STATUS:\n      return { ...state, gameStatus: payload };\n\n    case SET_OFFER_DRAW:\n      return { ...state, offerDraw: payload };\n\n    case SET_OFFER_REMATCH:\n      return { ...state, offerRematch: payload };\n\n    case SET_REQUEST_TAKEBACK:\n      return { ...state, requestTakeback: payload };\n\n    case RESET_HUMAN_GAME_STATE:\n      return { ...state, ...payload };\n      \n    default:\n      return { ...state };\n  }\n};\n\nexport default HumanGameReducer;\n","import React, { useReducer } from \"react\";\n\nimport HumanGameContext from \"./HumanGameContext\";\nimport HumanGameReducer from \"./HumanGameReducer\";\n\nimport {\n  SET_OPP_USERNAME,\n  SET_OPP_START_GAME,\n  SET_RECEIVED_SETTINGS,\n  SET_HOST,\n  SET_GAME_CODE,\n  SET_HUMAN_GAME_STATUS,\n  RESET_HUMAN_GAME_STATE,\n  SET_OFFER_DRAW,\n  SET_OFFER_REMATCH,\n  SET_REQUEST_TAKEBACK,\n} from \"../types\";\n\nexport const newHumanGameState = {\n  gameCode: \"\",\n  isHost: false,\n  oppUsername: \"\",\n  oppStartGame: false,\n  receivedSettings: false,\n  gameStatus: {\n    main: \"New Game\",\n    winner: null,\n    reason: null,\n    rematchOffered: false,\n    drawOffered: false,\n    takebackRequested: false,\n  },\n  offerRematch: false,\n  offerDraw: false,\n  requestTakeback: false,\n};\n\nconst HumanGameState = (props) => {\n  const initialState = newHumanGameState;\n\n  const [state, dispatch] = useReducer(HumanGameReducer, initialState);\n\n  const setGameCode = (gameCode) => {\n    dispatch({ type: SET_GAME_CODE, payload: gameCode });\n  };\n\n  const setHost = () => {\n    dispatch({ type: SET_HOST, payload: null });\n  };\n\n  const setOppUsername = (username) => {\n    dispatch({ type: SET_OPP_USERNAME, payload: username });\n  };\n\n  const setOppStartGame = (value) => {\n    dispatch({ type: SET_OPP_START_GAME, payload: value });\n  };\n\n  const setReceivedSettings = (value) => {\n    dispatch({ type: SET_RECEIVED_SETTINGS, payload: value });\n  };\n\n  const setGameStatus = (gameStatus) => {\n    dispatch({ type: SET_HUMAN_GAME_STATUS, payload: gameStatus });\n  };\n\n  const setOfferRematch = (value) => {\n    dispatch({ type: SET_OFFER_REMATCH, payload: value });\n  };\n\n  const setOfferDraw = (value) => {\n    dispatch({ type: SET_OFFER_DRAW, payload: value });\n  };\n\n  const setRequestTakeback = (value) => {\n    dispatch({ type: SET_REQUEST_TAKEBACK, payload: value });\n  };\n\n  const resetHumanGameState = () => {\n    dispatch({\n      type: RESET_HUMAN_GAME_STATE,\n      payload: {\n        oppStartGame: false,\n        receivedSettings: false,\n        gameStatus: {\n          main: \"New Game\",\n          winner: null,\n          reason: null,\n          rematchOffered: false,\n          drawOffered: false,\n          takebackRequested: false,\n        },\n      },\n    });\n  };\n\n  return (\n    <HumanGameContext.Provider\n      value={{\n        gameCode: state.gameCode,\n        isHost: state.isHost,\n        oppUsername: state.oppUsername,\n        oppStartGame: state.oppStartGame,\n        receivedSettings: state.receivedSettings,\n        gameStatus: state.gameStatus,\n        offerRematch: state.offerRematch,\n        offerDraw: state.offerDraw,\n        requestTakeback: state.requestTakeback,\n        setHost,\n        setGameCode,\n        setOppUsername,\n        setOppStartGame,\n        setReceivedSettings,\n        setGameStatus,\n        setOfferRematch,\n        setOfferDraw,\n        setRequestTakeback,\n        resetHumanGameState,\n      }}\n    >\n      {props.children}\n    </HumanGameContext.Provider>\n  );\n};\n\nexport default HumanGameState;\n","import { createContext } from \"react\";\n\nconst P2PContext = createContext();\n\nexport default P2PContext;","import { SET_P2PT, SET_OPP_PEER_OBJ } from \"../types\";\n\nconst P2PReducer = (state, action) => {\n  switch (action.type) {\n    case SET_P2PT:\n      return { ...state, p2pt: action.payload };\n    case SET_OPP_PEER_OBJ:\n      return { ...state, oppPeerObj: action.payload };\n    default:\n      return { ...state };\n  }\n};\n\nexport default P2PReducer;\n","export const MSG_TYPES = {\n  USER_NAME: \"USER_NAME\",\n  SETTINGS: \"SETTINGS\",\n  MOVE: \"MOVE\",\n  CHESS_CLIENT: \"CHESS_CLIENT\",\n  GAME_STATUS: \"GAME_STATUS\",\n};\n\nexport const SIGNAL_TYPES = {\n  START_GAME: \"START_GAME\",\n  OFFER_REMATCH: \"OFFER_REMATCH\",\n  REMATCH_OFFER_ACCEPTED: \"REMATCH_OFFER_ACCEPTED\",\n  REMATCH_OFFER_DECLINED: \"REMATCH_OFFER_DECLINED\",\n  OFFER_DRAW: \"OFFER_DRAW\",\n  DRAW_OFFER_ACCEPTED: \"DRAW_OFFER_ACCEPTED\",\n  DRAW_OFFER_DECLINED: \"DRAW_OFFER_DECLINED\",\n  REQUEST_TAKEBACK: \"REQUEST_TAKEBACK\",\n  TAKEBACK_REQUEST_ACCEPTED: \"TAKEBACK_REQUEST_ACCEPTED\",\n  TAKEBACK_REQUEST_DECLINED: \"TAKEBACK_REQUEST_DECLINED\",\n  RESIGN: \"RESIGN\",\n  ILLEGAL_MOVE_LOST: \"ILLEGAL_MOVE_LOST\",\n};","import React, { useReducer } from \"react\";\n\nimport P2PContext from \"./P2PContext\";\nimport P2PReducer from \"./P2PReducer\";\n\nimport { SET_P2PT, SET_OPP_PEER_OBJ } from \"../types\";\n\nimport { MSG_TYPES } from \"../../hooks/types\";\n\nexport const newP2PState = {\n  p2pt: null,\n  oppPeerObj: null,\n};\n\nconst P2PState = (props) => {\n  const initialState = newP2PState;\n\n  const [state, dispatch] = useReducer(P2PReducer, initialState);\n\n  const setP2pt = (p2pt) => {\n    dispatch({ type: SET_P2PT, payload: p2pt });\n  };\n\n  const setOppPeerObj = (oppPeerObj) => {\n    dispatch({ type: SET_OPP_PEER_OBJ, payload: oppPeerObj });\n  };\n\n  // Send message to peer\n  const sendSignal = (signalMsg) => {\n    if (state.oppPeerObj) {\n      let msg = {\n        type: signalMsg,\n      };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  const sendUsername = (username) => {\n    if (state.oppPeerObj) {\n      let msg = { type: MSG_TYPES.USER_NAME, username };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  const sendSettings = (settings) => {\n    if (state.oppPeerObj) {\n      // mutate settings\n      let modSettings = { ...settings };\n      delete modSettings.username;\n\n      let msg = { type: MSG_TYPES.SETTINGS, settings: modSettings };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  const sendMove = (move) => {\n    if (state.oppPeerObj) {\n      let msg = { type: MSG_TYPES.MOVE, move };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  const sendChessClient = (newClient) => {\n    if (state.oppPeerObj) {\n      let msg = { type: MSG_TYPES.CHESS_CLIENT, newClient };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  const sendGameStatus = (gameStatus) => {\n    if (state.oppPeerObj) {\n      let msg = { type: MSG_TYPES.GAME_STATUS, gameStatus };\n      state.p2pt.send(state.oppPeerObj, JSON.stringify(msg));\n    }\n  };\n\n  return (\n    <P2PContext.Provider\n      value={{\n        p2pt: state.p2pt,\n        oppPeerObj: state.oppPeerObj,\n        setP2pt,\n        setOppPeerObj,\n        sendSignal,\n        sendUsername,\n        sendSettings,\n        sendMove,\n        sendChessClient,\n        sendGameStatus,\n      }}\n    >\n      {props.children}\n    </P2PContext.Provider>\n  );\n};\n\nexport default P2PState;\n","import { createContext } from \"react\";\n\nconst SettingsContext = createContext();\n\nexport default SettingsContext;","import {\n  SET_ALL_SETTINGS,\n  SET_COLOUR,\n  SET_USERNAME,\n  SET_ENTER_BY_KEYBOARD,\n  SET_SHOW,\n  SET_TIMES_TO_SHOW,\n  SET_ALLOW,\n  SET_TIMES_ALLOWED,\n} from \"../types\";\n\nconst SettingsReducer = (state, action) => {\n  const { settings, settingName, settingValue } = action.payload || {};\n  const { show, timesToShow, allow, timesAllowed } = state;\n\n  let curSettingValue;\n\n  switch (action.type) {\n    case SET_ALL_SETTINGS:\n      return { ...state, ...settings };\n\n    case SET_COLOUR:\n      return { ...state, colour: settingValue };\n\n    case SET_USERNAME:\n      return { ...state, username: settingValue };\n\n    case SET_ENTER_BY_KEYBOARD:\n      const enterByKeyboard = state.enterByKeyboard;\n      return { ...state, enterByKeyboard: !enterByKeyboard };\n\n    case SET_SHOW:\n      curSettingValue = show[settingName];\n      return { ...state, show: { ...show, [settingName]: !curSettingValue } };\n\n    case SET_TIMES_TO_SHOW:\n      return {\n        ...state,\n        timesToShow: { ...timesToShow, [settingName]: settingValue },\n      };\n\n    case SET_ALLOW:\n      curSettingValue = allow[settingName];\n      return { ...state, allow: { ...allow, [settingName]: !curSettingValue } };\n\n    case SET_TIMES_ALLOWED:\n      return {\n        ...state,\n        timesAllowed: { ...timesAllowed, [settingName]: settingValue },\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default SettingsReducer;\n","import React, { useReducer } from \"react\";\n\nimport { MAX_TIMES } from \"../../config/constants\";\n\nimport SettingsContext from \"./SettingsContext\";\nimport SettingsReducer from \"./SettingsReducer\";\n\nimport {\n  SET_ALL_SETTINGS,\n  SET_COLOUR,\n  SET_USERNAME,\n  SET_ENTER_BY_KEYBOARD,\n  SET_SHOW,\n  SET_TIMES_TO_SHOW,\n  SET_ALLOW,\n  SET_TIMES_ALLOWED,\n} from \"../types\";\n\nconst SettingsState = (props) => {\n  const initialState = {\n    username: \"\",\n    colour: \"White\",\n    enterByKeyboard: true,\n    show: {\n      legalMoves: false,\n      movesTable: true,\n      board: true,\n      mate: true,\n      checks: true,\n      captures: true,\n    },\n    timesToShow: {\n      legalMoves: MAX_TIMES,\n      movesTable: MAX_TIMES,\n      board: MAX_TIMES,\n    },\n    allow: {\n      illegalMove: true,\n      takeBack: true,\n    },\n    timesAllowed: {\n      illegalMove: MAX_TIMES,\n      takeBack: MAX_TIMES,\n    },\n    illegalMoveLoss: false,\n  };\n\n  const [state, dispatch] = useReducer(SettingsReducer, initialState);\n\n  const setAllSettings = (settings) => {\n    dispatch({ type: SET_ALL_SETTINGS, payload: { settings } });\n  };\n\n  const setUsername = (username) => {\n    dispatch({ type: SET_USERNAME, payload: { settingValue: username } });\n  };\n\n  const setColour = (colour) => {\n    dispatch({ type: SET_COLOUR, payload: { settingValue: colour } });\n  };\n\n  const setEnterByKeyboard = () => {\n    dispatch({ type: SET_ENTER_BY_KEYBOARD, payload: null });\n  };\n\n  const setShow = (settingName) => {\n    dispatch({ type: SET_SHOW, payload: { settingName } });\n  };\n\n  const setTimesToShow = (settingName, times) => {\n    dispatch({\n      type: SET_TIMES_TO_SHOW,\n      payload: { settingName, settingValue: times },\n    });\n  };\n\n  const setAllow = (settingName) => {\n    dispatch({ type: SET_ALLOW, payload: { settingName } });\n  };\n\n  const setTimesAllowed = (settingName, times) => {\n    dispatch({\n      type: SET_TIMES_ALLOWED,\n      payload: { settingName, settingValue: times },\n    });\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        username: state.username,\n        colour: state.colour,\n        enterByKeyboard: state.enterByKeyboard,\n        show: state.show,\n        timesToShow: state.timesToShow,\n        allow: state.allow,\n        timesAllowed: state.timesAllowed,\n        setSettings: {\n          setAllSettings,\n          setColour,\n          setUsername,\n          setEnterByKeyboard,\n          setShow,\n          setTimesToShow,\n          setAllow,\n          setTimesAllowed,\n        },\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsState;\n","import { createContext } from \"react\";\n\nconst CounterContext = createContext();\n\nexport default CounterContext;","import { SET_ALL_COUNTERS, SET_COUNTER, DECREMENT_COUNTER } from \"../types\";\n\nconst CounterReducer = (state, action) => {\n  const {\n    counterName,\n    counterValue,\n    timesToShow,\n    timesAllowed,\n  } = action.payload;\n  const curCounterValue = state[counterName];\n\n  switch (action.type) {\n    case SET_ALL_COUNTERS:\n      return { ...state, ...timesToShow, ...timesAllowed };\n    case SET_COUNTER:\n      return { ...state, [counterName]: counterValue };\n\n    case DECREMENT_COUNTER:\n      return { ...state, [counterName]: curCounterValue - 1 };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default CounterReducer;\n","import React, { useReducer } from \"react\";\n\nimport CounterContext from \"./CounterContext\";\nimport CounterReducer from \"./CounterReducer\";\n\nimport { SET_ALL_COUNTERS, SET_COUNTER, DECREMENT_COUNTER } from \"../types\";\n\nconst CounterState = (props) => {\n  const initialState = {\n    legalMoves: Infinity,\n    movesTable: Infinity,\n    board: Infinity,\n    illegalMoves: Infinity,\n    takebacks: Infinity,\n  };\n\n  const [state, dispatch] = useReducer(CounterReducer, initialState);\n\n  const setAllCounters = (allCounters) => {\n    dispatch({ type: SET_ALL_COUNTERS, payload: allCounters });\n  };\n\n  const setCounter = (counterName, counterValue) => {\n    dispatch({ type: SET_COUNTER, payload: { counterName, counterValue } });\n  };\n\n  const decrementCounter = (counterName) => {\n    dispatch({ type: DECREMENT_COUNTER, payload: { counterName } });\n  };\n\n  return (\n    <CounterContext.Provider\n      value={{\n        legalMoves: state.legalMoves,\n        movesTable: state.movesTable,\n        board: state.board,\n        illegalMoves: state.illegalMoves,\n        takebacks: state.takebacks,\n        setAllCounters,\n        setCounter,\n        decrementCounter,\n      }}\n    >\n      {props.children}\n    </CounterContext.Provider>\n  );\n};\n\nexport default CounterState;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfo,\n  faQuestion,\n  faCog,\n  faBrain,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Navbar.scss\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-brand\">\n        <Link to=\"/\" className=\"text-link\">\n          <FontAwesomeIcon icon={faBrain} color={\"#ffe0bd\"} />\n          <span>&nbsp;MindChess</span>\n        </Link>\n      </div>\n      <div className=\"nav-menu\">\n        <ul className=\"nav-items\">\n          <li className=\"nav-item\">\n            <Link to=\"/\">\n              <FontAwesomeIcon icon={faInfo} color={\"#f0ad4e\"} />\n              <span>&nbsp;About</span>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/\">\n              <FontAwesomeIcon icon={faQuestion} color={\"#5bc0de\"} />\n              <span>&nbsp;Help</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <h3 className=\"footer-text\">\n        Made by\n        <a href=\"https://pranav.dev\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <span>&nbsp;@pranavmodx</span>\n        </a>\n      </h3>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserFriends,\n  faUsers,\n  faDesktop,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Home.scss\";\n\nconst Home = () => {\n  return (\n    <main className=\"main-home\">\n      <div className=\"home-container\">\n        <button className=\"btn-lg is-left\">\n          <Link to=\"/play/friend\">\n            <FontAwesomeIcon icon={faUserFriends} />\n            <span>&nbsp;Play against Friend</span>\n          </Link>\n        </button>\n        {/* <button className=\"btn-lg is-left\">\n          <Link to=\"/play/random\">\n            <FontAwesomeIcon icon={faUsers} />\n            <span>&nbsp;Play against Random Opponent</span>\n          </Link>\n        </button> */}\n        {/* <button className=\"btn-lg is-left\">\n          <Link to=\"/play/comp\">\n            <FontAwesomeIcon icon={faDesktop} />\n            <span>&nbsp;Play against Stockfish Computer</span>\n          </Link>\n        </button> */}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\n\nimport \"./HostOrJoin.scss\";\n\nimport HumanGameContext from \"../../../context/humanGame/HumanGameContext\";\nimport SettingsContext from \"../../../context/settings/SettingsContext\";\n\nimport { GAME_CODE_LENGTH } from \"../../../config/constants\";\n\nconst HostOrJoin = ({ setView }) => {\n  const [inputCode, setInputCode] = useState(\"\");\n  const [inputUsername, setInputUsername] = useState(\"\");\n\n  const humanContext = useContext(HumanGameContext);\n  const { setHost, setGameCode } = humanContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const {\n    setSettings: { setUsername },\n  } = settingsContext;\n\n  const hostGame = () => {\n    const code = Math.random()\n      .toString(36)\n      .substr(2, GAME_CODE_LENGTH);\n    console.log(\"Game code :\", code);\n    // sessionStorage.setItem(\"gameCode\", code);\n\n    setGameCode(code);\n    setUsername(inputUsername);\n    setHost();\n    setView(1);\n  };\n\n  const joinGame = () => {\n    // sessionStorage.setItem(\"gameCode\", gameCode);\n    // if (inputCode.length === GAME_CODE_LENGTH) {\n    setGameCode(inputCode);\n\n    setUsername(inputUsername);\n    setView(1);\n    // }\n  };\n\n  return (\n    <main>\n      <div className=\"container\">\n        <div className=\"container-input\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={inputUsername}\n            onChange={(e) => setInputUsername(e.target.value)}\n          />\n        </div>\n\n        <button className=\"btn-lg mt-5\" onClick={hostGame}>\n          Host Game\n        </button>\n\n        <div className=\"separator mt-3 mb-3\">\n          <h2>OR</h2>\n        </div>\n\n        <div className=\"container-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter game code\"\n            onChange={(e) => setInputCode(e.target.value)}\n          />\n        </div>\n        <button className=\"btn-lg\" onClick={joinGame}>\n          Join Game\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default HostOrJoin;\n","import { useEffect, useContext } from \"react\";\n\nimport P2PContext from \"../context/P2P/P2PContext\";\nimport GameContext from \"../context/game/GameContext\";\nimport HumanGameContext from \"../context/humanGame/HumanGameContext\";\nimport SettingsContext from \"../context/settings/SettingsContext\";\n\nimport { GAME_ANNOUNCE_URLS, APP_NAME } from \"../config/constants\";\n\nimport { MSG_TYPES, SIGNAL_TYPES } from \"./types\";\n\nconst P2PT = require(\"p2pt\");\n\nconst useP2Pt = () => {\n  const p2pContext = useContext(P2PContext);\n  const { p2pt, setP2pt, setOppPeerObj } = p2pContext;\n\n  const gameContext = useContext(GameContext);\n  const {\n    chessClient,\n    setChessClient,\n    setMovesPgn,\n    setMovesFen,\n    setMyTurn,\n    resetGameState,\n  } = gameContext;\n\n  const humanGameContext = useContext(HumanGameContext);\n  const {\n    colour,\n    gameCode,\n    gameStatus,\n    setGameStatus,\n    setOppUsername,\n    setOppStartGame,\n    setReceivedSettings,\n    setOfferDraw,\n    setOfferRematch,\n    setRequestTakeback,\n    resetHumanGameState,\n  } = humanGameContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const {\n    username,\n    setSettings: { setAllSettings },\n  } = settingsContext;\n\n  const connect = () => {\n    let p2ptObj = new P2PT(GAME_ANNOUNCE_URLS, APP_NAME + gameCode); // + gameCode don't forget\n\n    setP2pt(p2ptObj);\n\n    p2ptObj.on(\"trackerconnect\", (tracker, stats) => {\n      console.log(\"Connected to tracker : \" + tracker.announceUrl);\n      console.log(\"Tracker stats : \" + JSON.stringify(stats));\n    });\n\n    p2ptObj.on(\"peerconnect\", (peer) => {\n      console.log(\"Peer connected!\");\n      console.log(\"Peer : \", peer);\n\n      setOppPeerObj(peer);\n\n      let msg = { type: MSG_TYPES.USER_NAME, username };\n      p2ptObj.send(peer, JSON.stringify(msg));\n    });\n\n    p2ptObj.on(\"peerclose\", (peer) => {\n      console.log(\"Peer disconnected!\");\n      console.log(\"Peer : \", peer);\n\n      setOppPeerObj(null);\n    });\n\n    // Receive message from peer\n    p2ptObj.on(\"msg\", (peer, msg) => {\n      msg = JSON.parse(msg); // Really important to parse!\n\n      switch (msg.type) {\n        // No message, just signals\n        case SIGNAL_TYPES.START_GAME:\n          console.log(\"start game signal received\");\n          setOppStartGame(true);\n          break;\n\n        case SIGNAL_TYPES.OFFER_REMATCH:\n          console.log(\"rematch signal received\");\n          // let newStatus = { ...gameStatus };\n          // newStatus.rematchOffered = true;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.REMATCH_OFFER_ACCEPTED:\n          console.log(\"rematch accepted signal received\");\n          setOfferRematch(false);\n\n          // newStatus = { ...gameStatus };\n          // newStatus.rematchOffered = false;\n          // setGameStatus(newStatus);\n          // console.log(newStatus);\n\n          resetHumanGameState();\n          resetGameState();\n          break;\n\n        case SIGNAL_TYPES.REMATCH_OFFER_DECLINED:\n          console.log(\"rematch declined signal received\");\n          setOfferRematch(false);\n\n          // newStatus = { ...gameStatus };\n          // console.log(newStatus);\n          // newStatus.rematchOffered = false;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.OFFER_DRAW:\n          console.log(\"draw offer signal received\");\n          // newStatus = { ...gameStatus };\n          // newStatus.drawOffered = true;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.DRAW_OFFER_ACCEPTED:\n          console.log(\"draw offer signal received\");\n          setOfferDraw(false);\n\n          // newStatus = { ...gameStatus };\n          // newStatus.drawOffered = false;\n          // newStatus.main = \"Draw\";\n          // newStatus.reason = \"Agreement\";\n          // newStatus.winner = \"Draw\";\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.DRAW_OFFER_DECLINED:\n          console.log(\"draw offer declined signal received\");\n          setOfferDraw(false);\n\n          // newStatus = { ...gameStatus };\n          // newStatus.drawOffered = false;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.REQUEST_TAKEBACK:\n          console.log(\"draw offer signal received\");\n\n          // newStatus = { ...gameStatus };\n          // newStatus.takebackRequested = true;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.TAKEBACK_REQUEST_ACCEPTED:\n          console.log(\"takeback accepted signal received\");\n          setRequestTakeback(false);\n          // newStatus = { ...gameStatus };\n          // newStatus.takebackRequested = false;\n          // setGameStatus(newStatus);\n          chessClient.undoMove();\n          setMyTurn(true);\n          break;\n\n        case SIGNAL_TYPES.TAKEBACK_REQUEST_DECLINED:\n          console.log(\"takeback declined signal received\");\n          setRequestTakeback(false);\n\n          // newStatus = { ...gameStatus };\n          // newStatus.takebackRequested = false;\n          // setGameStatus(newStatus);\n          break;\n\n        case SIGNAL_TYPES.RESIGN:\n          console.log(\"resign signal received\");\n          break;\n\n        case SIGNAL_TYPES.ILLEGAL_MOVE_LOST:\n          console.log(\"illegal move lost signal received\");\n          break;\n\n        // Actual message & communication\n        case MSG_TYPES.USER_NAME:\n          console.log(\"opp username received : \", msg.username);\n          setOppUsername(msg.username);\n          break;\n\n        case MSG_TYPES.SETTINGS:\n          console.log(\"settings msg received\");\n\n          let modSettings = { ...msg.settings };\n          if (modSettings.colour === \"White\") modSettings.colour = \"Black\";\n          else modSettings.colour = \"White\";\n\n          setAllSettings(modSettings);\n          setReceivedSettings(true);\n          break;\n\n        case MSG_TYPES.MOVE:\n          console.log(\"move msg received\");\n          chessClient.move(msg.move);\n          setMovesPgn(chessClient.getPgn());\n          setMovesFen(chessClient.getFen());\n          setMyTurn(true);\n          break;\n\n        case MSG_TYPES.CHESS_CLIENT:\n          console.log(\"chess client msg received\");\n          // chessClient.move(msg.move);\n          setChessClient(msg.newClient);\n          setMyTurn(true);\n          break;\n\n        case MSG_TYPES.GAME_STATUS:\n          console.log(\"game status received\");\n          setGameStatus(msg.gameStatus);\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    p2ptObj.start();\n  };\n\n  useEffect(() => {\n    if (!p2pt) connect();\n  }, []);\n};\n\nexport default useP2Pt;\n","import React from \"react\";\n\nimport \"./ToggleSwitch.scss\";\n\nconst ToggleSwitch = ({\n  name,\n  id,\n  currentValue,\n  defaultChecked,\n  disabled,\n  onChange,\n  small,\n  text,\n}) => {\n  return (\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={currentValue}\n        defaultChecked={defaultChecked}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {id ? (\n        <label className=\"toggle-switch-label\" htmlFor={id}>\n          <span\n            className={\n              disabled\n                ? \"toggle-switch-inner toggle-switch-disabled\"\n                : \"toggle-switch-inner\"\n            }\n            data-yes={text[0]}\n            data-no={text[1]}\n          />\n          <span\n            className={\n              disabled\n                ? \"toggle-switch-switch toggle-switch-disabled\"\n                : \"toggle-switch-switch\"\n            }\n          />\n        </label>\n      ) : null}\n    </div>\n  );\n};\n\nToggleSwitch.defaultProps = {\n  text: [\"Yes\", \"No\"],\n};\n\nexport default ToggleSwitch;\n","import React, { useContext } from \"react\";\n\nimport SettingsContext from \"../../../context/settings/SettingsContext\";\n\nimport ToggleSwitch from \"../ToggleSwitch/ToggleSwitch\";\n\nimport \"./GeneralSettings.scss\";\n\nconst GeneralSettings = ({ disabled }) => {\n  const settingsContext = useContext(SettingsContext);\n\n  const {\n    enterByKeyboard,\n    show,\n    allow,\n    colour,\n    setSettings: {\n      setColour,\n      setEnterByKeyboard,\n      setShow,\n      setAllow,\n      setTimesToShow,\n      setTimesAllowed,\n    },\n  } = settingsContext;\n\n  const numOfTimes = [1, 3, 5, Infinity];\n\n  return (\n    <div className=\"gen-settings\">\n      <table className=\"settings-table\">\n        <tbody>\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Colour</h3>\n            </td>\n            <td className=\"settings-value\">\n              <div className=\"btn-group\">\n                <button\n                  className={`btn ${colour === \"White\" ? \"highlight\" : \"\"}`}\n                  onClick={() => setColour(\"White\")}\n                  disabled={disabled}\n                >\n                  <h3 className=\"text\">White</h3>\n                </button>\n                <button\n                  className={`btn ${colour === \"Black\" ? \"highlight\" : \"\"}`}\n                  onClick={() => setColour(\"Black\")}\n                  disabled={disabled}\n                >\n                  <h3 className=\"text\">Black</h3>\n                </button>\n              </div>\n            </td>\n          </tr>\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Enter Moves by Keyboard</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"enterByKeyboard\"\n                id=\"enterByKeyboard\"\n                small={true}\n                currentValue={enterByKeyboard}\n                onChange={setEnterByKeyboard}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Show Moves</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"movesTable\"\n                id=\"showMovesTable\"\n                small={true}\n                currentValue={show.movesTable}\n                onChange={(e) => setShow(e.target.name)}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          {show.movesTable && (\n            <>\n              <tr className=\"settings-item\">\n                <td className=\"settings-attr\">\n                  <h3 className=\"text\">Times to Show Moves</h3>\n                </td>\n                <td className=\"settings-attr\">\n                  <select\n                    className=\"settings-select\"\n                    name=\"movesTable\"\n                    id=\"timesToShowMovesTable\"\n                    defaultValue={Infinity}\n                    onChange={(e) =>\n                      setTimesToShow(e.target.name, Number(e.target.value))\n                    }\n                    disabled={disabled}\n                  >\n                    {numOfTimes.map((val, idx) => (\n                      <option value={val} key={idx}>\n                        {val}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n              </tr>\n\n              <tr className=\"settings-item\">\n                <td className=\"settings-attr\">\n                  <h3 className=\"text\">Show Mate</h3>\n                </td>\n                <td className=\"settings-attr\">\n                  <ToggleSwitch\n                    name=\"mate\"\n                    id=\"showMate\"\n                    small={true}\n                    currentValue={show.mate}\n                    onChange={(e) => setShow(e.target.name)}\n                    disabled={disabled}\n                  />\n                </td>\n              </tr>\n\n              <tr className=\"settings-item\">\n                <td className=\"settings-attr\">\n                  <h3 className=\"text\">Show Checks</h3>\n                </td>\n                <td className=\"settings-attr\">\n                  <ToggleSwitch\n                    name=\"checks\"\n                    id=\"showChecks\"\n                    small={true}\n                    currentValue={show.checks}\n                    onChange={(e) => setShow(e.target.name)}\n                    disabled={disabled}\n                  />\n                </td>\n              </tr>\n\n              <tr className=\"settings-item\">\n                <td className=\"settings-attr\">\n                  <h3 className=\"text\">Show Captures</h3>\n                </td>\n                <td className=\"settings-attr\">\n                  <ToggleSwitch\n                    name=\"captures\"\n                    id=\"showCaptures\"\n                    small={true}\n                    currentValue={show.captures}\n                    onChange={(e) => setShow(e.target.name)}\n                    disabled={disabled}\n                  />\n                </td>\n              </tr>\n            </>\n          )}\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Show Legal Moves</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"legalMoves\"\n                id=\"showLegalMoves\"\n                small={true}\n                currentValue={show.legalMoves}\n                onChange={(e) => setShow(e.target.name)}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          {show.legalMoves && (\n            <tr className=\"settings-item\">\n              <td className=\"settings-attr\">\n                <h3 className=\"text\">Times to Show Legal Moves</h3>\n              </td>\n              <td className=\"settings-attr\">\n                <select\n                  className=\"settings-select\"\n                  name=\"legalMoves\"\n                  id=\"timesToShowLegalMoves\"\n                  defaultValue={Infinity}\n                  onChange={(e) =>\n                    setTimesToShow(e.target.name, Number(e.target.value))\n                  }\n                  disabled={disabled}\n                >\n                  {numOfTimes.map((val, idx) => (\n                    <option value={val} key={idx}>\n                      {val}\n                    </option>\n                  ))}\n                  disabled={disabled}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Show Board</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"board\"\n                id=\"showBoard\"\n                small={true}\n                currentValue={show.board}\n                onChange={(e) => setShow(e.target.name)}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          {show.board && (\n            <tr className=\"settings-item\">\n              <td className=\"settings-attr\">\n                <h3 className=\"text\">Times to Show Board</h3>\n              </td>\n              <td className=\"settings-attr\">\n                <select\n                  className=\"settings-select\"\n                  name=\"legalMoves\"\n                  id=\"timesToShowLegalMoves\"\n                  defaultValue={Infinity}\n                  onChange={(e) =>\n                    setTimesToShow(e.target.name, Number(e.target.value))\n                  }\n                  disabled={disabled}\n                >\n                  {numOfTimes.map((val, idx) => (\n                    <option value={val} key={idx}>\n                      {val}\n                    </option>\n                  ))}\n                  disabled={disabled}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Allow Illegal Moves</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"illegalMove\"\n                id=\"allowIllegalMove\"\n                small={true}\n                currentValue={allow.illegalMove}\n                onChange={(e) => setAllow(e.target.name)}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          {allow.illegalMove && (\n            <tr className=\"settings-item\">\n              <td className=\"settings-attr\">\n                <h3 className=\"text\">Times to Allow Illegal Moves</h3>\n              </td>\n              <td className=\"settings-attr\">\n                <select\n                  className=\"settings-select\"\n                  name=\"illegalMove\"\n                  id=\"timesToAllowIllegalMove\"\n                  defaultValue={Infinity}\n                  onChange={(e) =>\n                    setTimesAllowed(e.target.name, Number(e.target.value))\n                  }\n                  disabled={disabled}\n                >\n                  {numOfTimes.map((val, idx) => (\n                    <option value={val} key={idx}>\n                      {val}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          <tr className=\"settings-item\">\n            <td className=\"settings-attr\">\n              <h3 className=\"text\">Allow Takebacks</h3>\n            </td>\n            <td className=\"settings-attr\">\n              <ToggleSwitch\n                name=\"takeBack\"\n                id=\"allowTakeBack\"\n                small={true}\n                currentValue={allow.takeBack}\n                onChange={(e) => setAllow(e.target.name)}\n                disabled={disabled}\n              />\n            </td>\n          </tr>\n\n          {allow.takeBack && (\n            <tr className=\"settings-item\">\n              <td className=\"settings-attr\">\n                <h3 className=\"text\">Times to Allow Takebacks</h3>\n              </td>\n              <td className=\"settings-attr\">\n                <select\n                  className=\"settings-select\"\n                  name=\"takeBack\"\n                  id=\"timesToAllowTakeBack\"\n                  defaultValue={Infinity}\n                  onChange={(e) =>\n                    setTimesAllowed(e.target.name, Number(e.target.value))\n                  }\n                  disabled={disabled}\n                >\n                  {numOfTimes.map((val, idx) => (\n                    <option value={val} key={idx}>\n                      {val}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n\n    //   <div className=\"container\">\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"color\">Colour</label>\n    //       <div id=\"color\">\n    //         <button onClick={() => setColour(\"White\")} disabled={disabled}>\n    //           White\n    //         </button>\n    //         <button onClick={() => setColour(\"Black\")} disabled={disabled}>\n    //           Black\n    //         </button>\n    //       </div>\n    //     </div>\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"enterByKeyboard\">Enter Moves by Keyboard</label>\n    //       <ToggleSwitch\n    //         name=\"enterByKeyboard\"\n    //         id=\"enterByKeyboard\"\n    //         small={true}\n    //         currentValue={enterByKeyboard}\n    //         onChange={setEnterByKeyboard}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"showMovesTable\">Show Moves Table</label>\n    //       <ToggleSwitch\n    //         name=\"movesTable\"\n    //         id=\"showMovesTable\"\n    //         small={true}\n    //         currentValue={show.movesTable}\n    //         onChange={(e) => setShow(e.target.name)}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n    //     {show.movesTable && (\n    //       <>\n    //         <div className=\"setting-item\">\n    //           <label htmlFor=\"timesToShowMovesTable\">\n    //             Times to Show Moves Table\n    //           </label>\n    //           <select\n    //             name=\"movesTable\"\n    //             id=\"timesToShowMovesTable\"\n    //             defaultValue={Infinity}\n    //             onChange={(e) =>\n    //               setTimesToShow(e.target.name, Number(e.target.value))\n    //             }\n    //             disabled={disabled}\n    //           >\n    //             {numOfTimes.map((val, idx) => (\n    //               <option value={val} key={idx}>\n    //                 {val}\n    //               </option>\n    //             ))}\n    //           </select>\n    //         </div>\n    //         <div className=\"setting-item\">\n    //           <label htmlFor=\"showMate\">Show Mate</label>\n    //           <ToggleSwitch\n    //             name=\"mate\"\n    //             id=\"showMate\"\n    //             small={true}\n    //             currentValue={show.mate}\n    //             onChange={(e) => setShow(e.target.name)}\n    //             disabled={disabled}\n    //           />\n    //         </div>\n    //         <div className=\"setting-item\">\n    //           <label htmlFor=\"showChecks\">Show Checks</label>\n    //           <ToggleSwitch\n    //             name=\"checks\"\n    //             id=\"showChecks\"\n    //             small={true}\n    //             currentValue={show.checks}\n    //             onChange={(e) => setShow(e.target.name)}\n    //             disabled={disabled}\n    //           />\n    //         </div>\n    //         <div className=\"setting-item\">\n    //           <label htmlFor=\"showCaptures\">Show Captures</label>\n    //           <ToggleSwitch\n    //             name=\"captures\"\n    //             id=\"showCaptures\"\n    //             small={true}\n    //             currentValue={show.captures}\n    //             onChange={(e) => setShow(e.target.name)}\n    //             disabled={disabled}\n    //           />\n    //         </div>\n    //       </>\n    //     )}\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"showLegalMoves\">Show Legal Moves</label>\n    //       <ToggleSwitch\n    //         name=\"legalMoves\"\n    //         id=\"showLegalMoves\"\n    //         small={true}\n    //         currentValue={show.legalMoves}\n    //         onChange={(e) => setShow(e.target.name)}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n    //     {show.legalMoves && (\n    //       <div className=\"setting-item\">\n    //         <label htmlFor=\"timesToShowLegalMoves\">\n    //           Times to Show Legal Moves\n    //         </label>\n    //         <select\n    //           name=\"legalMoves\"\n    //           id=\"timesToShowLegalMoves\"\n    //           defaultValue={Infinity}\n    //           onChange={(e) =>\n    //             setTimesToShow(e.target.name, Number(e.target.value))\n    //           }\n    //           disabled={disabled}\n    //         >\n    //           {numOfTimes.map((val, idx) => (\n    //             <option value={val} key={idx}>\n    //               {val}\n    //             </option>\n    //           ))}\n    //           disabled={disabled}\n    //         </select>\n    //       </div>\n    //     )}\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"showBoard\">Show Board</label>\n    //       <ToggleSwitch\n    //         name=\"board\"\n    //         id=\"showBoard\"\n    //         small={true}\n    //         currentValue={show.board}\n    //         onChange={(e) => setShow(e.target.name)}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n    //     {show.board && (\n    //       <div className=\"setting-item\">\n    //         <label htmlFor=\"timesToShowBoard\">Times to Show Board</label>\n    //         <select\n    //           name=\"board\"\n    //           id=\"timesToShowBoard\"\n    //           defaultValue={Infinity}\n    //           onChange={(e) =>\n    //             setTimesToShow(e.target.name, Number(e.target.value))\n    //           }\n    //           disabled={disabled}\n    //         >\n    //           {numOfTimes.map((val, idx) => (\n    //             <option value={val} key={idx}>\n    //               {val}\n    //             </option>\n    //           ))}\n    //         </select>\n    //       </div>\n    //     )}\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"allowIllegalMove\">Allow Illegal Move</label>\n    //       <ToggleSwitch\n    //         name=\"illegalMove\"\n    //         id=\"allowIllegalMove\"\n    //         small={true}\n    //         currentValue={allow.illegalMove}\n    //         onChange={(e) => setAllow(e.target.name)}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n    //     {allow.illegalMove && (\n    //       <div className=\"setting-item\">\n    //         <label htmlFor=\"timesToAllowIllegalMove\">\n    //           Times to Allow Illegal Moves\n    //         </label>\n    //         <select\n    //           name=\"illegalMove\"\n    //           id=\"timesToAllowIllegalMove\"\n    //           defaultValue={Infinity}\n    //           onChange={(e) =>\n    //             setTimesAllowed(e.target.name, Number(e.target.value))\n    //           }\n    //           disabled={disabled}\n    //         >\n    //           {numOfTimes.map((val, idx) => (\n    //             <option value={val} key={idx}>\n    //               {val}\n    //             </option>\n    //           ))}\n    //         </select>\n    //       </div>\n    //     )}\n\n    //     <div className=\"setting-item\">\n    //       <label htmlFor=\"allowTakeBack\">Allow Take Back</label>\n    //       <ToggleSwitch\n    //         name=\"takeBack\"\n    //         id=\"allowTakeBack\"\n    //         small={true}\n    //         currentValue={allow.takeBack}\n    //         onChange={(e) => setAllow(e.target.name)}\n    //         disabled={disabled}\n    //       />\n    //     </div>\n    //     {allow.takeBack && (\n    //       <div className=\"setting-item\">\n    //         <label htmlFor=\"timesToAllowTakeBack\">\n    //           Times to Allow Take Backs\n    //         </label>\n    //         <select\n    //           name=\"takeBack\"\n    //           id=\"timesToAllowTakeBack\"\n    //           defaultValue={Infinity}\n    //           onChange={(e) =>\n    //             setTimesAllowed(e.target.name, Number(e.target.value))\n    //           }\n    //           disabled={disabled}\n    //         >\n    //           {numOfTimes.map((val, idx) => (\n    //             <option value={val} key={idx}>\n    //               {val}\n    //             </option>\n    //           ))}\n    //         </select>\n    //       </div>\n    //     )}\n    //   </div>\n  );\n};\n\nexport default GeneralSettings;\n","import React, { useContext } from \"react\";\n\nimport useP2Pt from \"../../../hooks/useP2Pt\";\nimport { SIGNAL_TYPES } from \"../../../hooks/types\";\n\nimport CircleLoader from \"react-spinners/CircleLoader\";\n\nimport P2PContext from \"../../../context/P2P/P2PContext\";\nimport GameContext from \"../../../context/game/GameContext\";\nimport HumanGameContext from \"../../../context/humanGame/HumanGameContext\";\nimport SettingsContext from \"../../../context/settings/SettingsContext\";\nimport CounterContext from \"../../../context/counter/CounterContext\";\n\nimport GeneralSettings from \"../../common/Settings/GeneralSettings\";\n\nimport \"./Lobby.scss\";\n\nconst Lobby = () => {\n  const gameContext = useContext(GameContext);\n  const { startGame, setStartGame, setMyTurn } = gameContext;\n\n  const humanGameContext = useContext(HumanGameContext);\n  const {\n    gameCode,\n    isHost,\n    oppUsername,\n    oppStartGame,\n    receivedSettings,\n  } = humanGameContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const {\n    username: myUsername,\n    colour,\n    timesToShow,\n    timesAllowed,\n  } = settingsContext;\n\n  const counterContext = useContext(CounterContext);\n  const { setAllCounters } = counterContext;\n\n  const p2pContext = useContext(P2PContext);\n  const { p2pt, oppPeerObj, sendSignal, sendSettings } = p2pContext;\n\n  console.log(oppUsername);\n\n  useP2Pt();\n\n  const handleStartGame = () => {\n    if (oppPeerObj) {\n      if (isHost) sendSettings(settingsContext);\n\n      sendSignal(SIGNAL_TYPES.START_GAME);\n\n      if (colour === \"White\") setMyTurn(true);\n      else setMyTurn(false);\n\n      setAllCounters({ timesToShow, timesAllowed });\n      setStartGame(true);\n    } else {\n      console.log(\"wait till peer connects\");\n    }\n  };\n\n  return (\n    <div className=\"lobby\">\n      {!p2pt ? (\n        <div className=\"lobby-loading\">\n          <h2 className=\"sub-heading mb-3\">\n            {isHost ? <span>Hosting game</span> : <span>Joining game</span>}...\n            Please wait\n          </h2>\n          <CircleLoader />\n        </div>\n      ) : (\n        <div className=\"lobby-container\">\n          <h1 className=\"heading\">Lobby</h1>\n          <div className=\"lobby-settings-pane\">\n            <h2 className=\"sub-heading\">Game Settings</h2>\n            <GeneralSettings\n              disabled={isHost ? (!startGame ? false : true) : true}\n            />\n          </div>\n          <div className=\"lobby-users-pane\">\n            <h2 className=\"sub-heading\">Players</h2>\n            <table className=\"users-table\">\n              <thead>\n                <tr className=\"users-item\">\n                  <th className=\"t-header users-attr\">\n                    <h3 className=\"text text-md wt-500\">Name</h3>\n                  </th>\n                  <th className=\"t-header users-attr\">\n                    <h3 className=\"text text-md wt-500\">Status</h3>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"users-item\">\n                  <td className=\"text users-attr\">{myUsername}</td>\n                  <td className=\"text users-attr\">\n                    {startGame ? \"Ready\" : \"Not Ready\"}\n                  </td>\n                </tr>\n                <tr className=\"users-item\">\n                  <td className=\"text users-attr\">\n                    {oppUsername.length !== 0 ? oppUsername : \"Waiting...\"}\n                  </td>\n                  <td className=\"text users-attr\">\n                    {oppUsername.length !== 0\n                      ? oppStartGame\n                        ? \"Ready\"\n                        : \"Not Ready\"\n                      : \"-\"}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <h3 className=\"text mt-3\">\n              <strong>Game Code</strong> : {gameCode}\n            </h3>\n          </div>\n          <div className=\"lobby-action-pane\">\n            <button\n              className=\"btn\"\n              onClick={handleStartGame}\n              disabled={\n                isHost ? (oppPeerObj ? startGame : true) : !receivedSettings\n              }\n            >\n              Start Game\n            </button>\n            {isHost && startGame && (\n              <h3 className=\"text\">Please wait for the opponent to be ready</h3>\n            )}\n            {!isHost && !receivedSettings && (\n              <h3 className=\"text\">\n                Please wait for the opponent to configure the settings\n              </h3>\n            )}\n            {!isHost && receivedSettings && (\n              <h3 className=\"text\">\n                Click Start Game to let the opponent know you're ready!\n              </h3>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n\n    // <div className=\"lobby-grid\">\n    //   {!p2pt ? (\n    //     <div className=\"lobby-container\">\n    //       <h4>\n    //         {isHost ? <span>Hosting</span> : <span>Joining</span>} the game...\n    //         Please wait\n    //       </h4>\n    //       {/* some spinner here */}\n    //     </div>\n    //   ) : (\n    //     <div className=\"lobby-settings-pane\">\n    //       <GeneralSettings\n    //         disabled={isHost ? (!startGame ? false : true) : true}\n    //       />\n    //       {!isHost ? (\n    //         <>\n    //           <h5>\n    //             Once your friend {oppUsername} is done adding the settings, you\n    //             can click start game\n    //           </h5>\n\n    //           <button\n    //             onClick={handleStartGame}\n    //             disabled={\n    //               !receivedSettings\n    //             } /* start game can only be hit once, to avoid multiple change of settings */\n    //           >\n    //             Start Game\n    //           </button>\n    //         </>\n    //       ) : (\n    //         <>\n    //           <button\n    //             onClick={handleStartGame}\n    //             disabled={\n    //               startGame\n    //             } /* start game can only be hit once, to avoid multiple change of settings */\n    //           >\n    //             Start Game\n    //           </button>\n    //           {startGame && <h2>Please wait for {oppUsername} to be ready</h2>}\n    //         </>\n    //       )}\n    //     </div>\n    //   )}\n    // </div>\n  );\n};\n\nexport default Lobby;\n","export const formatMove = (move, showIfMate, showIfCheck, showIfCapture) => {\n  let formattedMove = move;\n\n  if (!showIfMate) {\n    formattedMove = formattedMove.replace(\"#\", \"\");\n  }\n  if (!showIfCheck) {\n    formattedMove = formattedMove.replace(\"+\", \"\");\n  }\n  if (!showIfCapture) {\n    formattedMove = formattedMove.replace(\"x\", \"\");\n  }\n\n  return formattedMove;\n};\n","import React, { useContext } from \"react\";\n\nimport GameContext from \"../../../../../context/game/GameContext\";\nimport HumanGameContext from \"../../../../../context/humanGame/HumanGameContext\";\nimport SettingsContext from \"../../../../../context/settings/SettingsContext\";\n\nimport \"./GameStatus.scss\";\n\nconst GameStatus = () => {\n  const gameContext = useContext(GameContext);\n  const { chessClient, myTurn } = gameContext;\n\n  const humanGameContext = useContext(HumanGameContext);\n  const { oppUsername, gameStatus } = humanGameContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const { username: myUsername } = settingsContext;\n\n  const getLastMove = (offsetTrue, offsetFalse) => {\n    const history = chessClient.getMoveHistory();\n    const offset = !myTurn ? offsetTrue : offsetFalse;\n    return history[history.length - offset];\n  };\n\n  let lastOppMove = getLastMove(2, 1);\n  let lastMyMove = getLastMove(1, 2);\n\n  const myText = lastMyMove ? (\n    <h4 className=\"text status-move\">You played {lastMyMove}</h4>\n  ) : (\n    myTurn && <h4 className=\"text status-main\">Make your move, {myUsername}</h4>\n  );\n\n  const oppText = lastOppMove ? (\n    <h4 className=\"text status-move\">\n      {oppUsername} played {lastOppMove}\n    </h4>\n  ) : (\n    !myTurn && (\n      <h4 className=\"text status-move\">Wait for {oppUsername} to move</h4>\n    )\n  );\n\n  return (\n    <div className=\"gamestatus\">\n      <h3 className=\"text status-main\">{gameStatus.main}</h3>\n      {gameStatus.winner && (\n        <h4 className=\"text status-winner\">\n          {gameStatus.winner} {gameStatus.winner !== \"Draw\" ? \"won\" : \"\"} by{\" \"}\n          {gameStatus.reason}\n        </h4>\n      )}\n\n      {!gameStatus.winner && myText}\n      {!gameStatus.winner && oppText}\n    </div>\n  );\n};\n\nexport default GameStatus;\n","import React from \"react\";\n\nimport \"./MoveButtons.scss\";\n\nconst MoveButtons = (move, formattedMove, setInputMove) => {\n  return (\n    <div className=\"move-button\">\n      <button className=\"btn\" key={move} onClick={() => setInputMove(move)}>\n        {formattedMove}\n      </button>\n    </div>\n  );\n};\n\nexport default MoveButtons;\n","import React, { useState, useContext } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faPercentage, faUndo } from \"@fortawesome/free-solid-svg-icons\";\n\nimport P2PContext from \"../../../../context/P2P/P2PContext\";\nimport GameContext from \"../../../../context/game/GameContext\";\nimport HumanGameContext from \"../../../../context/humanGame/HumanGameContext\";\nimport SettingsContext from \"../../../../context/settings/SettingsContext\";\nimport CounterContext from \"../../../../context/counter/CounterContext\";\n\nimport { MAX_NOTATION_LENGTH, MAX_TIMES } from \"../../../../config/constants\";\nimport { SIGNAL_TYPES } from \"../../../../hooks/types\";\nimport { formatMove } from \"../../../../helper/FormatMove\";\n\nimport GameStatus from \"./GameStatus/GameStatus\";\nimport MoveButtons from \"../../../common/MoveButtons/MoveButtons\";\n\nimport \"./Play.scss\";\nimport { faHandshake } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Play = () => {\n  const gameContext = useContext(GameContext);\n  const {\n    chessClient,\n    setChessClient,\n    myTurn,\n    setMovesPgn,\n    setMovesFen,\n    setMyTurn,\n    setStartGame,\n    resetGameState,\n  } = gameContext;\n\n  const humanGameContext = useContext(HumanGameContext);\n  const {\n    gameStatus,\n    oppUsername,\n    setGameStatus,\n    offerRematch,\n    offerDraw,\n    requestTakeback,\n    setOfferRematch,\n    setOfferDraw,\n    setRequestTakeback,\n    resetHumanGameState,\n  } = humanGameContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const {\n    colour: playerColour,\n    show,\n    timesToShow,\n    allow,\n    timesAllowed,\n    illegalMoveLoss,\n  } = settingsContext;\n\n  const {\n    mate: showIfMate,\n    checks: showIfCheck,\n    captures: showIfCapture,\n  } = show;\n\n  const p2pContext = useContext(P2PContext);\n  const { sendSignal, sendGameStatus, sendMove, sendChessClient } = p2pContext;\n\n  const counterContext = useContext(CounterContext);\n  const { setCounter, decrementCounter } = counterContext;\n\n  const [inputMove, setInputMove] = useState(\"\");\n  const [showLegalMoves, setShowLegalMoves] = useState(true);\n\n  const gameIsOver =\n    gameStatus.main !== \"New Game\" && gameStatus.main !== \"Active Game\";\n\n  const handleGameStatus = () => {\n    const { main, reason } = chessClient.getStatus();\n\n    let newStatus = { ...gameStatus };\n\n    newStatus.main = main;\n    newStatus.reason = reason;\n\n    if (gameIsOver) newStatus.winner = main.split(\" \")[0];\n\n    setGameStatus(newStatus);\n    sendGameStatus(newStatus);\n  };\n\n  const handleIllegalMove = () => {\n    if (illegalMoveLoss) {\n      setCounter((counter) => {\n        return {\n          ...counter,\n          illegalMoves: counterContext.illegalMoves + 1,\n        };\n      });\n\n      if (\n        timesAllowed.illegalMoves <=\n        counterContext.illegalMoves + 1 // setState is not asynchronous!\n      ) {\n        let newStatus = { ...gameStatus };\n\n        newStatus.main = \"Game Over\";\n\n        if (playerColour === \"White\") newStatus.winner = \"Black\";\n        else newStatus.winner = \"White\";\n\n        newStatus.reason = \"Illegal move limit exceeded\";\n\n        setGameStatus(newStatus);\n        sendSignal(SIGNAL_TYPES.ILLEGAL_MOVE_LOST);\n        sendGameStatus(newStatus);\n      }\n    }\n  };\n\n  const handleInputMoveSubmit = () => {\n    if (inputMove.length <= MAX_NOTATION_LENGTH) {\n      if (chessClient.isValidMove(inputMove)) {\n        chessClient.move(inputMove);\n\n        setMovesPgn(chessClient.getPgn());\n        setMovesFen(chessClient.getFen());\n\n        sendMove(inputMove);\n\n        handleGameStatus();\n\n        setMyTurn(false);\n\n        // sendMove(chessClient);\n      } else handleIllegalMove();\n    }\n\n    setInputMove(\"\"); // clear move\n  };\n\n  const handleOfferRematch = () => {\n    setOfferRematch(true);\n\n    let newStatus = { ...gameStatus };\n    newStatus.rematchOffered = true;\n\n    setGameStatus(newStatus);\n\n    sendSignal(SIGNAL_TYPES.OFFER_REMATCH);\n    sendGameStatus(newStatus);\n  };\n\n  const handleOfferDraw = () => {\n    setOfferDraw(true);\n\n    let newStatus = { ...gameStatus };\n    newStatus.drawOffered = true;\n\n    setGameStatus(newStatus);\n\n    sendSignal(SIGNAL_TYPES.OFFER_DRAW);\n    sendGameStatus(newStatus);\n  };\n\n  const handleRequestTakeback = (e) => {\n    setRequestTakeback(true);\n\n    let newStatus = { ...gameStatus };\n    newStatus.takebackRequested = true;\n\n    setGameStatus(newStatus);\n\n    sendSignal(SIGNAL_TYPES.REQUEST_TAKEBACK);\n    sendGameStatus(newStatus);\n  };\n\n  const handleResignation = () => {\n    let newStatus = { ...gameStatus };\n\n    if (playerColour === \"White\") {\n      newStatus.main = \"Game Over\";\n      newStatus.winner = \"Black\";\n    } else {\n      newStatus.main = \"Game Over\";\n      newStatus.winner = \"White\";\n    }\n    newStatus.reason = \"Resignation\";\n\n    setGameStatus(newStatus);\n\n    sendSignal(SIGNAL_TYPES.RESIGN);\n    sendGameStatus(newStatus);\n  };\n\n  const handleOfferRematchResponse = (e) => {\n    let newStatus = { ...gameStatus };\n    newStatus.rematchOffered = false;\n\n    if (e.target.name === \"Accept\") {\n      sendSignal(SIGNAL_TYPES.REMATCH_OFFER_ACCEPTED);\n      resetHumanGameState();\n      resetGameState();\n    } else {\n      sendSignal(SIGNAL_TYPES.REMATCH_OFFER_DECLINED);\n      sendGameStatus(newStatus);\n      setGameStatus(newStatus);\n    }\n  };\n\n  const handleOfferDrawResponse = (e) => {\n    let newStatus = { ...gameStatus };\n    newStatus.drawOffered = false;\n\n    if (e.target.name === \"Accept\") {\n      newStatus.main = \"Game Drawn\";\n      newStatus.reason = \"Agreement\";\n      newStatus.winner = \"Draw\";\n\n      sendSignal(SIGNAL_TYPES.DRAW_OFFER_ACCEPTED);\n    } else sendSignal(SIGNAL_TYPES.DRAW_OFFER_DECLINED);\n\n    setGameStatus(newStatus);\n    sendGameStatus(newStatus);\n  };\n\n  const handleTakebackResponse = (e) => {\n    let newStatus = { ...gameStatus };\n    newStatus.takebackRequested = false;\n\n    if (e.target.name === \"Accept\") {\n      chessClient.undoMove();\n      setMovesPgn(chessClient.getPgn());\n      setMovesFen(chessClient.getFen());\n\n      sendSignal(SIGNAL_TYPES.TAKEBACK_REQUEST_ACCEPTED);\n      setMyTurn(false);\n    } else sendSignal(SIGNAL_TYPES.TAKEBACK_REQUEST_DECLINED);\n\n    setGameStatus(newStatus);\n    sendGameStatus(newStatus);\n  };\n\n  return (\n    <div className=\"play\">\n      <GameStatus />\n\n      <div className=\"container-input\">\n        <input\n          type=\"text\"\n          name=\"move-input\"\n          value={inputMove}\n          placeholder=\"Enter your move\"\n          className=\"move-input\"\n          onChange={(e) => setInputMove(e.target.value)}\n          disabled={!myTurn || gameIsOver}\n        />\n        {show.legalMoves && showLegalMoves !== MAX_TIMES && (\n          <>\n            <button\n              className=\"btn btn-w3\"\n              onClick={() => {\n                setShowLegalMoves((showLegalMoves) => !showLegalMoves);\n                setCounter((counter) => {\n                  return {\n                    ...counter,\n                    legalMoves: counterContext.legalMoves + 1,\n                  };\n                });\n              }}\n              // disabled={counterContext.legalMoves >= show.legalMoves}\n            >\n              Legal Moves\n            </button>\n          </>\n        )}\n        <button\n          className=\"btn\"\n          onClick={handleInputMoveSubmit}\n          disabled={!myTurn || gameIsOver}\n        >\n          Submit\n        </button>\n      </div>\n\n      {showLegalMoves && (\n        <div className=\"moves-grid\">\n          {chessClient\n            .getLegalMoves()\n            .map((move) =>\n              MoveButtons(\n                move,\n                formatMove(move, showIfMate, showIfCheck, showIfCapture),\n                setInputMove\n              )\n            )}\n        </div>\n      )}\n\n      {/* <div className=\"click-moves\">\n        {showLegalMoves && (\n          <div className=\"moves-grid\">\n            {chessClient\n              .getLegalMoves()\n              .map((move) =>\n                MoveButtons(\n                  move,\n                  formatMove(move, showIfMate, showIfCheck, showIfCapture),\n                  setInputMove\n                )\n              )}\n          </div>\n        )}\n\n        <button\n          className=\"btn-lg\"\n          onClick={handleInputMoveSubmit}\n          disabled={!myTurn || gameIsOver}\n        >\n          Submit\n        </button>\n      </div> */}\n\n      {/* {show.legalMoves && showLegalMoves !== MAX_TIMES && (\n        <>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setShowLegalMoves((showLegalMoves) => !showLegalMoves);\n              setCounter((counter) => {\n                return {\n                  ...counter,\n                  legalMoves: counterContext.legalMoves + 1,\n                };\n              });\n            }}\n            // disabled={counterContext.legalMoves >= show.legalMoves}\n          >\n            Show Legal Moves\n          </button>\n          {showLegalMoves && (\n            <div className=\"moves-grid\">\n              {chessClient\n                .getLegalMoves()\n                .map((move) =>\n                  MoveButtons(\n                    move,\n                    formatMove(move, showIfMate, showIfCheck, showIfCapture),\n                    setInputMove\n                  )\n                )}\n            </div>\n          )}\n        </>\n      )} */}\n\n      <div className=\"play-buttons\">\n        <button\n          className=\"btn\"\n          onClick={handleOfferDraw}\n          disabled={\n            !myTurn || offerDraw || gameStatus.drawOffered || gameIsOver\n          }\n        >\n          <FontAwesomeIcon icon={faPercentage} />&nbsp;\n          Offer Draw\n        </button>\n\n        <button\n          className=\"btn\"\n          onClick={handleRequestTakeback}\n          disabled={\n            gameIsOver ||\n            chessClient.gameHistory().length === 0 ||\n            myTurn ||\n            requestTakeback ||\n            gameStatus.takebackRequested ||\n            counterContext.takeback >= timesAllowed.takeback\n          }\n        >\n          <FontAwesomeIcon icon={faArrowLeft} />&nbsp;\n          Takeback\n        </button>\n        <button\n          className=\"btn\"\n          onClick={handleResignation}\n          disabled={gameIsOver}\n        >\n          <FontAwesomeIcon icon={faHandshake} />&nbsp;\n          Resign\n        </button>\n\n        <button\n          className=\"btn\"\n          onClick={handleOfferRematch}\n          disabled={!gameIsOver || offerRematch || gameStatus.rematchOffered}\n        >\n          <FontAwesomeIcon icon={faUndo} />&nbsp;\n          Rematch\n        </button>\n      </div>\n\n      {gameStatus.rematchOffered && !offerRematch && (\n        <>\n          <span>{oppUsername} offered a rematch</span>\n          <button name=\"Accept\" onClick={handleOfferRematchResponse}>\n            Accept\n          </button>\n          <button name=\"Decline\" onClick={handleOfferRematchResponse}>\n            Decline\n          </button>\n        </>\n      )}\n\n      {gameStatus.drawOffered && !offerDraw && (\n        <>\n          <span>{oppUsername} offered a draw</span>\n          <button name=\"Accept\" onClick={handleOfferDrawResponse}>\n            Accept\n          </button>\n          <button onClick={handleOfferDrawResponse}>Decline</button>\n        </>\n      )}\n\n      {gameStatus.takebackRequested && !requestTakeback && (\n        <>\n          <span>{oppUsername} requested a takeback</span>\n          <button name=\"Accept\" onClick={handleTakebackResponse}>\n            Accept\n          </button>\n          <button onClick={handleTakebackResponse}>Decline</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Play;\n","import React, { useContext } from \"react\";\n\nimport { formatMove } from \"../../../../helper/FormatMove\";\n\nimport GameContext from \"../../../../context/game/GameContext\";\nimport SettingsContext from \"../../../../context/settings/SettingsContext\";\n\nimport \"./MoveTable.scss\";\n\nconst MoveTable = () => {\n  const gameContext = useContext(GameContext);\n  const { movesPgn } = gameContext;\n\n  const settingsContext = useContext(SettingsContext);\n  const {\n    show: { mate: showIfMate, captures: showIfCapture, checks: showIfCheck },\n  } = settingsContext;\n\n  const defaultGetRows = (movetext) => {\n    let ms = movetext;\n    if (!ms) {\n      return [];\n    }\n    /* delete comments */\n    ms = ms.replace(/(\\{[^}]+\\})+?/g, \"\");\n\n    /* delete recursive annotation variations */\n    const ravRegex = /(\\([^\\(\\)]+\\))+?/g;\n    while (ravRegex.test(ms)) {\n      ms = ms.replace(ravRegex, \"\");\n    }\n\n    /* delete numeric annotation glyphs */\n    ms = ms.replace(/\\$\\d+/g, \"\");\n\n    /* Delete result */\n    ms = ms.replace(/(?:1-0|0-1|1\\/2-1\\/2|\\*)$/, \"\");\n\n    /* Delete any double spaces */\n    ms = ms.replace(/\\s\\s/g, \" \").trim();\n\n    /* Split into rows */\n    const rows = [];\n    const rowRegex = /\\d+\\.\\s?\\S+(?:\\s+\\S+)?/g;\n    while (true) {\n      const result = rowRegex.exec(ms);\n      if (!result) {\n        break;\n      }\n      const row = result[0].split(/\\s|\\.\\s?/g);\n      row[0] = parseInt(row[0]);\n      rows.push(row);\n    }\n    return rows;\n  };\n\n  const getMoves = () => defaultGetRows(movesPgn);\n\n  const rowMapper = (row) => {\n    let moveNumber = row[0],\n      white = row[1]\n        ? formatMove(row[1], showIfMate, showIfCheck, showIfCapture)\n        : row[1],\n      black = row[2]\n        ? formatMove(row[2], showIfMate, showIfCheck, showIfCapture)\n        : row[2];\n\n    let moveObj = {\n      key: moveNumber,\n      moveNumber,\n      white,\n      black,\n    };\n\n    return moveObj;\n  };\n\n  const getAllMoves = () => getMoves().map(rowMapper);\n\n  let moves = getAllMoves();\n  console.log(moves);\n\n  // return moves.length === 0 ? (\n  //   <div style={{ textAlign: \"center\" }}>No moves yet</div>\n  // ) : (\n  //   <table>\n  //     <thead>\n  //       <tr>\n  //         <th>Move No.</th>\n  //         <th>White</th>\n  //         <th>Black</th>\n  //       </tr>\n  //     </thead>\n  //     <tbody>\n  //       {moves.map((move, idx) => (\n  //         <tr key={idx}>\n  //           <td>{move.moveNumber}</td>\n  //           <td>{move.white}</td>\n  //           <td>{move.black}</td>\n  //         </tr>\n  //       ))}\n  //     </tbody>\n  //   </table>\n  // );\n\n  return (\n    <div className=\"move\">\n      <table className=\"\">\n        <thead>\n          <tr>\n            <th>Move No.</th>\n            <th>White</th>\n            <th>Black</th>\n          </tr>\n        </thead>\n        <tbody>\n          {moves.map((move, idx) => (\n            <tr key={idx}>\n              <td>{move.moveNumber}</td>\n              <td>{move.white}</td>\n              <td>{move.black}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default MoveTable;\n","import React, { useContext } from \"react\";\n\nimport Chessboard from \"chessboardjsx\";\n// import { Chessboard } from \"@chrisoakman/chessboardjs/dist/chessboard-1.0.0\";\n\nimport GameContext from \"../../../../context/game/GameContext\";\n\nimport \"./Board.scss\";\n\nconst Board = () => {\n  const gameContext = useContext(GameContext);\n\n  const { movesFen } = gameContext;\n\n  const screenWidth = window.screen.width;\n\n  return (\n    <div className=\"board\">\n      <Chessboard\n        position={movesFen}\n        draggable={false}\n        width={screenWidth < 500 ? 300: 500}\n      />\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { useState, useContext } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faChessBoard,\n  faUsersCog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-regular-svg-icons\";\n\nimport SettingsContext from \"../../../context/settings/SettingsContext\";\nimport CounterContext from \"../../../context/counter/CounterContext\";\n\nimport Play from \"../../../components/PlayAgainstHuman/GameTabs/Play/Play\";\nimport MoveTable from \"../../../components/common/GameTabs/MoveTable/MoveTable\";\nimport Board from \"../../../components/common/GameTabs/Board/Board\";\n\nconst Game = () => {\n  // 0 -> Play, 1 -> Move, 2 -> Board\n  const [gameTab, setGameTab] = useState(0);\n\n  const settingsContext = useContext(SettingsContext);\n  const { show } = settingsContext;\n\n  const counterContext = useContext(CounterContext);\n  const {\n    decrementCounter,\n    board: boardCounter,\n    movesTable: movesTableCounter,\n  } = counterContext;\n\n  return (\n    <div>\n      <div className=\"game-tab\">\n        <button className=\"play-tab\" onClick={() => setGameTab(0)}>\n          <FontAwesomeIcon icon={faPlay} />\n          &nbsp;Play\n        </button>\n\n        <button\n          className=\"moves-tab\"\n          onClick={() => {\n            if (show.movesTable & (movesTableCounter > 0)) {\n              setGameTab(1);\n              decrementCounter(\"movesTable\");\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={faClipboard} />\n          &nbsp;Moves\n        </button>\n\n        <button\n          className=\"board-tab\"\n          onClick={() => {\n            if (show.board & (boardCounter > 0)) {\n              setGameTab(2);\n              decrementCounter(\"board\");\n            }\n          }}\n          disabled={!show.board}\n        >\n          <FontAwesomeIcon icon={faChessBoard} />\n          &nbsp;Board\n        </button>\n      </div>\n\n      {gameTab === 0 && (\n        <div className=\"game-tab-content\">\n          <Play />\n        </div>\n      )}\n\n      {gameTab === 1 && (\n        <div className=\"game-tab-content\">\n          <MoveTable />\n        </div>\n      )}\n\n      {gameTab === 2 && (\n        <div className=\"game-tab-content\">\n          <Board />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React, { useState, useContext } from \"react\";\n\nimport \"./PlayAgainstHuman.scss\";\n\nimport GameContext from \"../../context/game/GameContext\";\nimport HumanGameContext from \"../../context/humanGame/HumanGameContext\";\n\nimport HostOrJoin from \"../../components/PlayAgainstHuman/Views/HostOrJoin\";\nimport Lobby from \"../../components/PlayAgainstHuman/Views/Lobby\";\nimport Game from \"../../components/PlayAgainstHuman/Views/Game\";\n\nconst PlayAgainstFriend = (props) => {\n  // 0 -> Host/Join, 1 -> Lobby/Game\n  const [view, setView] = useState(0);\n\n  const gameContext = useContext(GameContext);\n  const { startGame } = gameContext;\n\n  const humanGameContext = useContext(HumanGameContext);\n  const { oppStartGame } = humanGameContext;\n\n  return (\n    <main>\n      {view === 0 && <HostOrJoin setView={setView} />}\n      {view === 1 && (!startGame || !oppStartGame) && (\n        <Lobby setView={setView} />\n      )}\n      {view === 1 && startGame && oppStartGame && <Game setView={setView} />}\n    </main>\n  );\n};\n\nexport default PlayAgainstFriend;\n","import React from \"react\";\n\nimport \"./NotFound.scss\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>\n        <span>404</span> Page Not Found\n      </h1>\n      <p>Sorry, that page doesn't exist.</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport GameState from \"./context/game/GameState\";\nimport HumanGameState from \"./context/humanGame/HumanGameState\";\nimport P2PState from \"./context/P2P/P2PState\";\nimport SettingsState from \"./context/settings/SettingsState\";\nimport CounterState from \"./context/counter/CounterState\";\n\nimport Navbar from \"./components/common/Navbar/Navbar\";\nimport Footer from \"./components/common/Footer/Footer\";\n\nimport Home from \"./pages/Home/Home\";\nimport PlayAgainstFriend from \"./pages/PlayAgainstHuman/PlayAgainstFriend\";\nimport PlayAgainstComp from \"./pages/PlayAgainstComp/PlayAgainstComp\";\nimport NotFound from \"./pages/NotFound/NotFound\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <GameState>\n            <SettingsState>\n              <CounterState>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/play/friend\">\n                {/* <Route exact path=\"/\"> */}\n                  <HumanGameState>\n                    <P2PState>\n                      <PlayAgainstFriend />\n                    </P2PState>\n                  </HumanGameState>\n                </Route>\n                {/* <Route exact path=\"/play/random\" component={PlayAgainstRandomOpp} /> */}\n                {/* <Route exact path=\"/play/comp\" component={PlayAgainstComp} /> */}\n              </CounterState>\n            </SettingsState>\n          </GameState>\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}